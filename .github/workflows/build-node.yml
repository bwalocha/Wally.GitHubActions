name: WebApp

on:
  push:
    branches:
      - "master"
    paths:
      - "src/**"
      - ".github/workflows/*.yml"
  pull_request:
    branches:
      - "master"
    paths:
      - "src/**"
      - ".github/workflows/*.yml"

jobs:
  build:
    name: Build Node
    runs-on: ubuntu-latest

    steps:
    - name: Debug
      run: |
        echo "The job was triggered by a ${{ github.event_name }} event"
        echo "This job is now running on a ${{ runner.os }} server hoster by GitHub"
        echo "The name of branch is ${{ github.ref }} and the repository is ${{ github.repository }}"

    - uses: actions/checkout@v2

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('src/**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '18.x'
        registry-url: https://registry.npmjs.org

    - name: List the state of node modules
      if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      continue-on-error: true
      run: npm list

    - name: Install dependencies
      run: npm --prefix ./src/my-vite4-react-ts-app ci

    - name: Build
      run: npm --prefix ./src/my-vite4-react-ts-app run build --if-present

    - name: Upload NPM artifacts
      uses: actions/upload-artifact@v2
      with:
        name: node-app
        path: .

  test:
    name: Test Node
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Unit Tests
      continue-on-error: true
      run: npm --prefix ./src/my-vite4-react-ts-app test

  deploy:
    name: Deploy TST
    needs: test
    runs-on: ubuntu-latest

    environment:
      name: 'tst'
      url: 'https://wally.best'

    steps:
    - name: Debug 001
      run: |
        cat src/public/config.template
        cat src/public/config.js

    # 1. copy config.template to config.js
    - name: Prepare config file to detokenize
      run: cp src/public/config.template src/public/config.js

    - name: Debug 002
      run: |
        cat src/public/config.template
        cat src/public/config.js

    # 2. detokenize config.js
    # https://github.com/marketplace/actions/replace-tokens
    # https://github.com/cschleiden/replace-tokens
    - name: Replace Tokens
      uses: cschleiden/replace-tokens@v1.2
      with:
        files: '["src/public/config.js"]'
      env:
        AZURE_B2C_CLIENT_ID: ${{ vars.AZURE_B2C_CLIENT_ID }}
        AZURE_B2C_AUTHORITY_URL: ${{ vars.AZURE_B2C_AUTHORITY_URL }}
        AZURE_B2C_SCOPE: ${{ vars.AZURE_B2C_SCOPE }}

    - name: Debug 003
      run: |
        cat src/public/config.template
        cat src/public/config.js
